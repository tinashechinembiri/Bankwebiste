{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tinas\\\\OneDrive\\\\Desktop\\\\Tinashe Chinembiri\\\\ReactApi\\\\apiinterface\\\\src\\\\Components\\\\Forgotpassword.js\";\nimport React, { Component } from 'react';\nimport './Css/Forgotpassword.css';\nimport Username from './Forgotpasswordcomponents/Username';\nimport Account from './Forgotpasswordcomponents/Account';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, NavItem } from 'reactstrap';\nconst url_Allaccount = 'ApiAutomationHost/rest/account/account/Userdata';\nconst update_Passwordurl = '/ApiAutomationHost/rest/account/account/updatepassword/';\n\nclass Forgotpassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.alluserapi = () => {\n      fetch(url_Allaccount).then(response => {\n        return response.json();\n      }).then(data => this.setState({\n        User_data: data\n      }, console.log(data)));\n    };\n\n    this.UpdatePassword = event => {\n      event.preventDefault();\n      var id = this.state.accountid;\n      const Updatenewpassword = Object.create(null, {\n        'password': this.state.newpassword\n      });\n      fetch(update_Passwordurl + id, {\n        method: 'PUT',\n        headers: new Headers({\n          'Accept': 'application/json, text/plain, */*',\n          'Content-type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }),\n        body: JSON.stringify(Updatenewpassword)\n      });\n    };\n\n    this.checkuserexist = () => {\n      console.log(this.state);\n      console.log('check');\n      var data = this.state.User_data;\n      var flag;\n      console.log(data);\n      var id = parseInt(this.state.accountid);\n      data.forEach(function (key, index) {\n        console.log('name' + key.accountid);\n        /*  if (data[key].account_number === id)\r\n          {\r\n            flag = true; \r\n          }*/\n      });\n\n      if (flag) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this._next = () => {\n      let step = this.state.step;\n      step = step >= 1 ? 2 : step + 1;\n      this.setState({\n        step: step\n      });\n    };\n\n    this.nextButton = () => {\n      console.log(this.checkuserexist());\n\n      if (this.checkuserexist() === true) {\n        this._next(this);\n      } else {\n        console.log(\"failed\");\n      }\n    };\n\n    this.state = {\n      accountid: '',\n      newpassword: '',\n      step: 1,\n      User_data: []\n    };\n    this.handleChange = this.handleChange.bind(this); //  this.nextButton = this.nextButton.bind(this); \n  }\n\n  componentDidMount() {\n    this.alluserapi();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    const step = this.state.step;\n\n    switch (step) {\n      case 1:\n        return React.createElement(Username, {\n          handleChange: event => this.handleChange(event),\n          accountid: this.state.accountid,\n          nextButton: this.nextButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(Account, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        });\n    }\n  }\n\n}\n\nexport default Forgotpassword;","map":{"version":3,"sources":["C:\\Users\\tinas\\OneDrive\\Desktop\\Tinashe Chinembiri\\ReactApi\\apiinterface\\src\\Components\\Forgotpassword.js"],"names":["React","Component","Username","Account","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","NavItem","url_Allaccount","update_Passwordurl","Forgotpassword","constructor","props","handleChange","event","target","name","value","setState","alluserapi","fetch","then","response","json","data","User_data","console","log","UpdatePassword","preventDefault","id","state","accountid","Updatenewpassword","Object","create","newpassword","method","headers","Headers","body","JSON","stringify","checkuserexist","flag","parseInt","forEach","key","index","_next","step","nextButton","bind","componentDidMount","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React ,{ Component } from 'react';\r\nimport './Css/Forgotpassword.css';\r\nimport Username from './Forgotpasswordcomponents/Username'; \r\nimport Account from './Forgotpasswordcomponents/Account'; \r\n\r\n\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button, NavItem\r\n  } from 'reactstrap';\r\n  const url_Allaccount = 'ApiAutomationHost/rest/account/account/Userdata'; \r\n  const update_Passwordurl = '/ApiAutomationHost/rest/account/account/updatepassword/'; \r\nclass Forgotpassword extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props); \r\n\r\n        this.state = {\r\n            accountid : '', \r\n            newpassword :'', \r\n            step: 1, \r\n            User_data: []\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this); \r\n      //  this.nextButton = this.nextButton.bind(this); \r\n    }\r\n    handleChange = async(event) => {\r\n\r\n        const {name, value} = event.target\r\n        \r\n        this.setState({\r\n          [name]: value, \r\n        })    \r\n      }\r\n\r\n\r\n    alluserapi = () => \r\n    {\r\n        fetch(url_Allaccount)\r\n        .then(response => {return response.json()})\r\n        .then(data => this.setState({User_data:data}, console.log(data)) )\r\n\r\n    }\r\n  UpdatePassword = (event) => \r\n  {\r\n    event.preventDefault(); \r\n    var id = this. state.accountid;\r\n    const Updatenewpassword = Object.create(\r\n      null,{\r\n        'password': this.state.newpassword, \r\n\r\n      } ); \r\n    fetch(update_Passwordurl +id , {\r\n      method: 'PUT',\r\n            headers: new Headers({\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n             }),\r\n             body:JSON.stringify(Updatenewpassword)\r\n    }\r\n      \r\n      )\r\n  }\r\n\r\n\r\n    checkuserexist = () => \r\n    {\r\n        console.log(this.state);\r\n        console.log('check')\r\n        var  data  = this.state.User_data; \r\n        var flag; \r\n       console.log(data)\r\n\r\n        var id = parseInt(this.state.accountid); \r\n        \r\n        data.forEach(function(key, index)\r\n        {\r\n          console.log('name'+key.accountid)\r\n\r\n        /*  if (data[key].account_number === id)\r\n          {\r\n            flag = true; \r\n          }*/\r\n        }\r\n        \r\n        )\r\n        if (flag)\r\n        {\r\n          return true; \r\n        }\r\n        else\r\n        {\r\n          return false; \r\n        }\r\n        \r\n      \r\n    }\r\n\r\n\r\n    _next = () => \r\n    {\r\n        let step = this.state.step; \r\n        step = step >= 1?2 : step + 1;\r\n        this.setState(\r\n            {\r\n              step: step \r\n            }\r\n          )\r\n\r\n\r\n    }\r\n    nextButton = () => \r\n    {\r\n         \r\n       console.log(this.checkuserexist())\r\n        if ( this.checkuserexist() === true)\r\n        {\r\n           \r\n                this._next(this); \r\n        }\r\n        else\r\n        {\r\n           console.log(\"failed\")     \r\n        } \r\n    }\r\n\r\n\r\n\r\n    componentDidMount()\r\n    {\r\n        this.alluserapi(); \r\n       \r\n    }\r\n    componentDidUpdate()\r\n    {\r\n    \r\n    }\r\n\r\n   \r\n        \r\n\r\n    render()\r\n    {\r\n        const {step} = this.state;\r\n            switch(step)\r\n           {\r\n                case 1: \r\n                return < Username\r\n\r\n                         handleChange = {(event) => this.handleChange(event)}  \r\n                    \r\n                         accountid ={this.state.accountid}\r\n                         nextButton = {this.nextButton}\r\n\r\n\r\n                 /> \r\n                 case 2: \r\n                 return <Account \r\n                 \r\n                 />\r\n\r\n           }\r\n\r\n            \r\n    }\r\n}\r\nexport default Forgotpassword ; "]},"metadata":{},"sourceType":"module"}